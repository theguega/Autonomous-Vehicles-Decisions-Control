@startuml
'https://plantuml.com/class-diagram


class demand {
id_dem
id_dep
id_arr
id_user
id_priority
demand(id_dem,id_dep,id_arr,id_user)
getIdem()
}

class Vehicule {
        id_vehicle
        id_road
        pos_X
        pos_Y
        dist_from_start
        nbpassengers
        plannedDemands
        actualPath
        vehicle(id_vehicle,id_road,pos_X,pos_Y,dist_from_start)
        addDemand(obj,demand)
        addPassenger(obj,nb)
        updatePosition(obj,id_road,pos_X,pos_Y,dist_from_start)
        getIdvehicle(obj)
        getRoad(obj)
        getX(obj)
        getY(obj)
        getDistFromStart(obj)
        assignateNewPath(obj,path)
        **assignateNewDemand(obj,demand)
        getTotalCost(obj,newDemand,NavG)
        getOptimalPath(obj,newDemand,NavG)
        showCarPath(obj,NavG)
}
demand o-- Vehicule

class user {
        id_user
        nom
        prenom
        pos_x
        pos_y
        id_road
        dist_from_start
        user(id_user,nom,prenom,id_road,pos_x,pos_y,dist_from_start)
        createDemand(obj,NavG,Id_road_dep,Id_road_arr,X_coord_dep,Y_coord_dep,dist_to_start_dep,X_coord_arr,Y_coord_arr,dist_to_start_arr,demands)
        getClosestvehicle(obj,vehicles,NavG)
        updatePos(obj,x,y,id_road)
}
demand *-- user
abstract class graphe {
        edges

}
class path{
        points
        roads
        cost
        Id_vehicle
        getPoints(obj)
}
class road{
        id_road
}
road *-- graphe



@enduml